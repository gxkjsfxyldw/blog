{"remainingRequest":"D:\\MyBlog\\Myblog-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\MyBlog\\Myblog-vue\\src\\views\\blog\\BlogWrite.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\MyBlog\\Myblog-vue\\src\\views\\blog\\BlogWrite.vue","mtime":1664856194439},{"path":"D:\\MyBlog\\Myblog-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1662220387677},{"path":"D:\\MyBlog\\Myblog-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662220380556},{"path":"D:\\MyBlog\\Myblog-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1662220386645}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport BaseHeader from \"@/components/common/BaseHeader\";\r\nimport MarkdownEditor from \"@/components/markdown/MarkdownEditor\";\r\nimport {publishArticle, getArticleById} from \"@/api/article\";\r\nimport {getAllcategory} from \"@/api/category\";\r\nimport {getAlltags} from \"@/api/tag\";\r\n\r\n\r\nexport default {\r\n  name: \"BlogWrite\",\r\n  components: {\r\n   \"markdown-editor\": MarkdownEditor,\r\n   \"base-header\": BaseHeader\r\n  },\r\n  data(){\r\n      return{\r\n        publishVisible: false,\r\n        categorys: [],\r\n        tags:[],\r\n        articleForm:{\r\n                id: '',\r\n                title: '',\r\n                summary: '',\r\n                category: '',\r\n                tags: [],\r\n                editor: {\r\n                  value: '',\r\n                  ref: '',//保存mavonEditor实例  实际不该这样\r\n                  default_open: 'edit',\r\n                  toolbars: {\r\n                    bold: true, // 粗体\r\n                    italic: true, // 斜体\r\n                    header: true, // 标题\r\n                    underline: true, // 下划线\r\n                    strikethrough: true, // 中划线\r\n                    mark: true, // 标记\r\n                    superscript: true, // 上角标\r\n                    subscript: true, // 下角标\r\n                    quote: true, // 引用\r\n                    ol: true, // 有序列表\r\n                    ul: true, // 无序列表\r\n                    imagelink: true, // 图片链接\r\n                    code: true, // code\r\n                    fullscreen: true, // 全屏编辑\r\n                    readmodel: true, // 沉浸式阅读\r\n                    help: true, // 帮助\r\n                    undo: true, // 上一步\r\n                    redo: true, // 下一步\r\n                    trash: true, // 清空\r\n                    navigation: true, // 导航目录\r\n                    //subfield: true, // 单双栏模式\r\n                    preview: true, // 预览\r\n                  }\r\n                }\r\n            },\r\n        rules:{\r\n          summary:[\r\n            {required: true, message: '请输入摘要', trigger: 'blur'},\r\n            {max: 80, message: '不能大于80个字符', trigger: 'blur'}\r\n          ],\r\n          category: [\r\n            {required: true, message: '请选择文章分类', trigger: 'change'}\r\n          ],\r\n          tags: [\r\n            {type: 'array', required: true, message: '请选择标签', trigger: 'change'}\r\n          ]\r\n        }\r\n      }\r\n  },\r\n  computed:{\r\n      title(){\r\n        return '写文章'\r\n    }\r\n  },\r\n  mounted() {\r\n    if(this.$route.params.id){\r\n      this.getArticleById(this.$route.params.id)\r\n    }\r\n\r\n    this.getCategorysAndTags()\r\n    this.editorToolBarToFixedWrapper = this.$_.throttle(this.editorToolBarToFixed, 200)\r\n    window.addEventListener('scroll', this.editorToolBarToFixedWrapper, false);\r\n  },\r\n  beforeDestroy() {\r\n    window.removeEventListener('scroll', this.editorToolBarToFixedWrapper, false)\r\n  },\r\n  methods:{\r\n    getArticleById(id){\r\n      alert(111)\r\n      let that=this\r\n      getArticleById(id).then((res)=>{\r\n        Object.assign(that.articleForm,res.data.data)\r\n        that.articleForm.editor.value=res.data.data.body.content\r\n        let tags=this.articleForm.tags.map(function (item){\r\n          return item.id;\r\n        })\r\n        this.articleForm.tags=tags;\r\n      }).catch(error => {\r\n        if (error !== 'error') {\r\n          that.$message({type: 'error', message: '文章加载失败', showClose: true})\r\n        }\r\n      })\r\n    },\r\n    publishShow(){\r\n      if(!this.articleForm.title){\r\n        this.$message({message:'标题不能为空哦',type:'warning',showClose:true})\r\n        return\r\n      }\r\n      if (this.articleForm.title.length > 30) {\r\n        this.$message({message:'标题不能大于30个字符',type:'warning',showClose:true})\r\n        return\r\n      }\r\n      if(!this.articleForm.editor.ref.d_render){\r\n        this.$message({message:'内容不能为空哦',type:'warning',showClose:true})\r\n        return\r\n      }\r\n      this.publishVisible=true;\r\n    },\r\n    publish(articleForm){\r\n      let that=this\r\n\r\n      that.$refs[articleForm].validate((valid) => {\r\n        if(valid) {\r\n          let tags=this.articleForm.tags.map(function (item) {\r\n            return {id: item};\r\n          });\r\n\r\n          let article={\r\n            id:this.articleForm.id,\r\n            title:this.articleForm.title,\r\n            summary:this.articleForm.summary,\r\n            category:this.articleForm.category,\r\n            tags: tags,\r\n            body:{\r\n              content:this.articleForm.editor.value,\r\n              contentHtml:this.articleForm.editor.ref.d_render\r\n            }\r\n          }\r\n          this.publishVisible=false;\r\n          let loading =this.$loading({\r\n            lock:true,\r\n            text:'正在发布文章，请稍后...'\r\n          })\r\n\r\n          publishArticle(article,this.$store.state.token).then((res)=>{\r\n            if(res.data.success){\r\n              loading.close();\r\n              that.$message({message:'文章发布成功！',type:'success',showClose:true})\r\n              that.$router.push({path:`/view/${res.data.data.id}`})\r\n            }else{\r\n              that.$message({message:'发布文章失败:'+res.data.msg,type:'error',showClose:true})\r\n            }\r\n          }).catch((error)=>{\r\n            loading.close();\r\n            if(error!=='error'){\r\n              that.$message({message:'发布文章失败:'+res.data.msg,type:'error',showClose:true})\r\n            }\r\n          })\r\n        }\r\n      });\r\n    },\r\n    cancel(){\r\n        this.$confirm('文章将不会保存，是否继续？',\"提示\",{\r\n          confirmButtonText:'确定',\r\n          cancelButtonText:'取消',\r\n          type:'warning'\r\n        }).then(()=>{\r\n          this.$router.push('/')\r\n        })\r\n    },\r\n\r\n    getCategorysAndTags(){\r\n      let that=this\r\n      getAllcategory().then((res)=>{\r\n        //发起http请求，后端的数据\r\n          if(res.data.success){\r\n            that.categorys = res.data.data\r\n          }else{\r\n            this.$message({type: 'error', message: '文章分类加载失败', showClose: true})\r\n          }\r\n        }).catch((err)=>{\r\n          if (err !== 'error') {\r\n            this.$message({type: 'error', message: '文章分类加载失败', showClose: true})\r\n          }\r\n        })\r\n      getAlltags().then((res)=>{\r\n        //发起http请求，后端的数据\r\n        if(res.data.success){\r\n          that.tags = res.data.data\r\n        }else{\r\n          this.$message({type: 'error', message: '标签加载失败', showClose: true})\r\n        }\r\n      }).catch((err)=>{\r\n        if (err !== 'error') {\r\n          that.$message({type: 'error', message: err.msg, showClose: true})\r\n        }\r\n      })\r\n\r\n    },\r\n    editorToolBarToFixed() {\r\n      let toolbar = document.querySelector('.v-note-op');\r\n      let curHeight = document.documentElement.scrollTop || document.body.scrollTop;\r\n      if (curHeight >= 160) {\r\n        document.getElementById(\"placeholder\").style.display = \"block\"; //bad  用计算属性较好\r\n        toolbar.classList.add(\"me-write-toolbar-fixed\");\r\n      } else {\r\n        document.getElementById(\"placeholder\").style.display = \"none\";\r\n        toolbar.classList.remove(\"me-write-toolbar-fixed\");\r\n      }\r\n    }\r\n  },\r\n  //组件内的守卫 调整body的背景色\r\n  beforeRouteEnter(to, from, next) {\r\n    window.document.body.style.backgroundColor = '#fff';\r\n    next();\r\n  },\r\n  beforeRouteLeave(to, from, next) {\r\n    window.document.body.style.backgroundColor = '#f5f5f5';\r\n    next();\r\n  }\r\n}\r\n",{"version":3,"sources":["BlogWrite.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"BlogWrite.vue","sourceRoot":"src/views/blog","sourcesContent":["<template>\r\n  <div id=\"write\" v-title :data-title=\"title\">\r\n    <el-container>\r\n      <base-header :simple=true>\r\n        <el-col :span=\"4\" :offset=\"2\">\r\n          <div class=\"me-write-info\">写文章</div>\r\n        </el-col>\r\n        <el-col :span=\"3\" :offset=\"6\" style=\"margin-top: 1%;margin-left: 30%\">\r\n          <div class=\"me-write-bth\">\r\n            <el-button round @click=\"publishShow\">发布</el-button>\r\n            <el-button round @click=\"cancel\">取消</el-button>\r\n          </div>\r\n        </el-col>\r\n      </base-header>\r\n\r\n      <el-container class=\"me-area me-write-box\">\r\n        <el-main class=\"me-write-main\">\r\n          <div class=\"me-write-title\">\r\n            <el-input resize=\"none\"\r\n              type=\"textarea\"\r\n              autosize\r\n              v-model=\"articleForm.title\"\r\n              placeholder=\"请输入标题\"\r\n              class=\"me-write-input\">\r\n            </el-input>\r\n          </div>\r\n          <div>\r\n            <div id=\"placeholder\" style=\"visibility: hidden;height: 90px;display: none\"></div>\r\n            <markdown-editor :editor=\"articleForm.editor\" class=\"me-write-editor\"></markdown-editor>\r\n          </div>\r\n        </el-main>\r\n      </el-container>\r\n\r\n      <el-dialog title=\"摘要 分类 标签\"\r\n        :visible.sync=\"publishVisible\"\r\n        :close-on-click-modal=\"false\"\r\n        custom-class=\"me-dialog\">\r\n\r\n        <el-form :model=\"articleForm\" ref=\"articleForm\" :rules=\"rules\">\r\n          <el-form-item prop=\"summary\">\r\n            <el-input\r\n                type=\"textarea\"\r\n                v-model=\"articleForm.summary\"\r\n                :rows=\"6\"\r\n                placeholder=\"请输入摘要\">\r\n            </el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"文章分类\" prop=\"category\">\r\n            <el-select v-model=\"articleForm.category\" value-key=\"id\" placeholder=\"请选择文章分类\">\r\n              <el-option v-for=\" c in categorys\" :key=\"c.id\" :label=\"c.categoryName\" :value=\"c\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item  label=\"文章标签\" prop=\"tags\">\r\n            <el-checkbox-group v-model=\"articleForm.tags\">\r\n              <el-checkbox v-for=\"t in tags\" :key=\"t.id\" :label=\"t.id\" name=\"tags\">{{t.tagName}}</el-checkbox>\r\n            </el-checkbox-group>\r\n          </el-form-item>\r\n        </el-form>\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button type=\"primary\" @click=\"publish('articleForm')\">发布</el-button>\r\n          <el-button @click=\"publishVisible=false\">取消</el-button>\r\n        </div>\r\n      </el-dialog>\r\n    </el-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport BaseHeader from \"@/components/common/BaseHeader\";\r\nimport MarkdownEditor from \"@/components/markdown/MarkdownEditor\";\r\nimport {publishArticle, getArticleById} from \"@/api/article\";\r\nimport {getAllcategory} from \"@/api/category\";\r\nimport {getAlltags} from \"@/api/tag\";\r\n\r\n\r\nexport default {\r\n  name: \"BlogWrite\",\r\n  components: {\r\n   \"markdown-editor\": MarkdownEditor,\r\n   \"base-header\": BaseHeader\r\n  },\r\n  data(){\r\n      return{\r\n        publishVisible: false,\r\n        categorys: [],\r\n        tags:[],\r\n        articleForm:{\r\n                id: '',\r\n                title: '',\r\n                summary: '',\r\n                category: '',\r\n                tags: [],\r\n                editor: {\r\n                  value: '',\r\n                  ref: '',//保存mavonEditor实例  实际不该这样\r\n                  default_open: 'edit',\r\n                  toolbars: {\r\n                    bold: true, // 粗体\r\n                    italic: true, // 斜体\r\n                    header: true, // 标题\r\n                    underline: true, // 下划线\r\n                    strikethrough: true, // 中划线\r\n                    mark: true, // 标记\r\n                    superscript: true, // 上角标\r\n                    subscript: true, // 下角标\r\n                    quote: true, // 引用\r\n                    ol: true, // 有序列表\r\n                    ul: true, // 无序列表\r\n                    imagelink: true, // 图片链接\r\n                    code: true, // code\r\n                    fullscreen: true, // 全屏编辑\r\n                    readmodel: true, // 沉浸式阅读\r\n                    help: true, // 帮助\r\n                    undo: true, // 上一步\r\n                    redo: true, // 下一步\r\n                    trash: true, // 清空\r\n                    navigation: true, // 导航目录\r\n                    //subfield: true, // 单双栏模式\r\n                    preview: true, // 预览\r\n                  }\r\n                }\r\n            },\r\n        rules:{\r\n          summary:[\r\n            {required: true, message: '请输入摘要', trigger: 'blur'},\r\n            {max: 80, message: '不能大于80个字符', trigger: 'blur'}\r\n          ],\r\n          category: [\r\n            {required: true, message: '请选择文章分类', trigger: 'change'}\r\n          ],\r\n          tags: [\r\n            {type: 'array', required: true, message: '请选择标签', trigger: 'change'}\r\n          ]\r\n        }\r\n      }\r\n  },\r\n  computed:{\r\n      title(){\r\n        return '写文章'\r\n    }\r\n  },\r\n  mounted() {\r\n    if(this.$route.params.id){\r\n      this.getArticleById(this.$route.params.id)\r\n    }\r\n\r\n    this.getCategorysAndTags()\r\n    this.editorToolBarToFixedWrapper = this.$_.throttle(this.editorToolBarToFixed, 200)\r\n    window.addEventListener('scroll', this.editorToolBarToFixedWrapper, false);\r\n  },\r\n  beforeDestroy() {\r\n    window.removeEventListener('scroll', this.editorToolBarToFixedWrapper, false)\r\n  },\r\n  methods:{\r\n    getArticleById(id){\r\n      alert(111)\r\n      let that=this\r\n      getArticleById(id).then((res)=>{\r\n        Object.assign(that.articleForm,res.data.data)\r\n        that.articleForm.editor.value=res.data.data.body.content\r\n        let tags=this.articleForm.tags.map(function (item){\r\n          return item.id;\r\n        })\r\n        this.articleForm.tags=tags;\r\n      }).catch(error => {\r\n        if (error !== 'error') {\r\n          that.$message({type: 'error', message: '文章加载失败', showClose: true})\r\n        }\r\n      })\r\n    },\r\n    publishShow(){\r\n      if(!this.articleForm.title){\r\n        this.$message({message:'标题不能为空哦',type:'warning',showClose:true})\r\n        return\r\n      }\r\n      if (this.articleForm.title.length > 30) {\r\n        this.$message({message:'标题不能大于30个字符',type:'warning',showClose:true})\r\n        return\r\n      }\r\n      if(!this.articleForm.editor.ref.d_render){\r\n        this.$message({message:'内容不能为空哦',type:'warning',showClose:true})\r\n        return\r\n      }\r\n      this.publishVisible=true;\r\n    },\r\n    publish(articleForm){\r\n      let that=this\r\n\r\n      that.$refs[articleForm].validate((valid) => {\r\n        if(valid) {\r\n          let tags=this.articleForm.tags.map(function (item) {\r\n            return {id: item};\r\n          });\r\n\r\n          let article={\r\n            id:this.articleForm.id,\r\n            title:this.articleForm.title,\r\n            summary:this.articleForm.summary,\r\n            category:this.articleForm.category,\r\n            tags: tags,\r\n            body:{\r\n              content:this.articleForm.editor.value,\r\n              contentHtml:this.articleForm.editor.ref.d_render\r\n            }\r\n          }\r\n          this.publishVisible=false;\r\n          let loading =this.$loading({\r\n            lock:true,\r\n            text:'正在发布文章，请稍后...'\r\n          })\r\n\r\n          publishArticle(article,this.$store.state.token).then((res)=>{\r\n            if(res.data.success){\r\n              loading.close();\r\n              that.$message({message:'文章发布成功！',type:'success',showClose:true})\r\n              that.$router.push({path:`/view/${res.data.data.id}`})\r\n            }else{\r\n              that.$message({message:'发布文章失败:'+res.data.msg,type:'error',showClose:true})\r\n            }\r\n          }).catch((error)=>{\r\n            loading.close();\r\n            if(error!=='error'){\r\n              that.$message({message:'发布文章失败:'+res.data.msg,type:'error',showClose:true})\r\n            }\r\n          })\r\n        }\r\n      });\r\n    },\r\n    cancel(){\r\n        this.$confirm('文章将不会保存，是否继续？',\"提示\",{\r\n          confirmButtonText:'确定',\r\n          cancelButtonText:'取消',\r\n          type:'warning'\r\n        }).then(()=>{\r\n          this.$router.push('/')\r\n        })\r\n    },\r\n\r\n    getCategorysAndTags(){\r\n      let that=this\r\n      getAllcategory().then((res)=>{\r\n        //发起http请求，后端的数据\r\n          if(res.data.success){\r\n            that.categorys = res.data.data\r\n          }else{\r\n            this.$message({type: 'error', message: '文章分类加载失败', showClose: true})\r\n          }\r\n        }).catch((err)=>{\r\n          if (err !== 'error') {\r\n            this.$message({type: 'error', message: '文章分类加载失败', showClose: true})\r\n          }\r\n        })\r\n      getAlltags().then((res)=>{\r\n        //发起http请求，后端的数据\r\n        if(res.data.success){\r\n          that.tags = res.data.data\r\n        }else{\r\n          this.$message({type: 'error', message: '标签加载失败', showClose: true})\r\n        }\r\n      }).catch((err)=>{\r\n        if (err !== 'error') {\r\n          that.$message({type: 'error', message: err.msg, showClose: true})\r\n        }\r\n      })\r\n\r\n    },\r\n    editorToolBarToFixed() {\r\n      let toolbar = document.querySelector('.v-note-op');\r\n      let curHeight = document.documentElement.scrollTop || document.body.scrollTop;\r\n      if (curHeight >= 160) {\r\n        document.getElementById(\"placeholder\").style.display = \"block\"; //bad  用计算属性较好\r\n        toolbar.classList.add(\"me-write-toolbar-fixed\");\r\n      } else {\r\n        document.getElementById(\"placeholder\").style.display = \"none\";\r\n        toolbar.classList.remove(\"me-write-toolbar-fixed\");\r\n      }\r\n    }\r\n  },\r\n  //组件内的守卫 调整body的背景色\r\n  beforeRouteEnter(to, from, next) {\r\n    window.document.body.style.backgroundColor = '#fff';\r\n    next();\r\n  },\r\n  beforeRouteLeave(to, from, next) {\r\n    window.document.body.style.backgroundColor = '#f5f5f5';\r\n    next();\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.el-header {\r\n  position: fixed;\r\n  z-index: 1024;\r\n  min-width: 100%;\r\n  box-shadow: 0 2px 3px hsla(0, 0%, 7%, .1), 0 0 0 1px hsla(0, 0%, 7%, .1);\r\n}\r\n\r\n.me-write-info {\r\n  line-height: 60px;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  margin-left: -20%;\r\n}\r\n\r\n.me-write-btn {\r\n  margin-top: 10px;\r\n}\r\n\r\n.me-write-box {\r\n  max-width: 1000px;\r\n  margin: 80px auto 0;\r\n}\r\n\r\n.me-write-main {\r\n  padding: 0;\r\n}\r\n\r\n.me-write-title {\r\n}\r\n\r\n.me-write-input textarea {\r\n  font-size: 32px;\r\n  font-weight: 600;\r\n  height: 20px;\r\n  border: none;\r\n}\r\n\r\n.me-write-editor {\r\n  min-height: 650px !important;\r\n}\r\n\r\n.me-header-left {\r\n  margin-top: 10px;\r\n}\r\n\r\n.me-title img {\r\n  max-height: 2.4rem;\r\n  max-width: 100%;\r\n}\r\n\r\n.me-write-toolbar-fixed {\r\n  position: fixed;\r\n  width: 700px !important;\r\n  top: 60px;\r\n}\r\n\r\n.v-note-op {\r\n  box-shadow: none !important;\r\n}\r\n\r\n.auto-textarea-input, .auto-textarea-block {\r\n  font-size: 18px !important;\r\n}\r\n</style>\r\n"]}]}