{"remainingRequest":"D:\\MyBlog\\Myblog-vue\\node_modules\\babel-loader\\lib\\index.js!D:\\MyBlog\\Myblog-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\MyBlog\\Myblog-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\MyBlog\\Myblog-vue\\src\\views\\blog\\BlogView.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\MyBlog\\Myblog-vue\\src\\views\\blog\\BlogView.vue","mtime":1673454882851},{"path":"D:\\MyBlog\\Myblog-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662220380556},{"path":"D:\\MyBlog\\Myblog-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1662220387677},{"path":"D:\\MyBlog\\Myblog-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662220380556},{"path":"D:\\MyBlog\\Myblog-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1662220386645}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { findArticleById as _findArticleById } from '@/api/article';\nimport MarkdownEditor from \"@/components/markdown/MarkdownEditor\";\nimport CommentItem from \"@/components/comment/CommentItem\";\nimport { getCommentsByArticle, publishComment as _publishComment } from \"@/api/comment\";\nimport default_avatar from '@/assets/img/logo.png';\nexport default {\n  name: \"BlogView\",\n  components: {\n    \"markdown-editor\": MarkdownEditor,\n    \"comment-item\": CommentItem\n  },\n  data: function data() {\n    return {\n      article: {\n        id: '',\n        title: '',\n        commentCounts: 0,\n        viewCounts: 0,\n        summary: '',\n        author: {},\n        tags: [],\n        category: {},\n        createDate: '',\n        editor: {\n          value: '',\n          toolbarsFlag: false,\n          subfield: false,\n          defaultOpen: 'preview'\n        }\n      },\n      comments: [],\n      comment: {\n        article: {},\n        content: ''\n      }\n    };\n  },\n  created: function created() {\n    this.findArticleById();\n    this.findCommentList();\n  },\n  computed: {\n    avatar: function avatar() {\n      var avatar = this.$store.state.avatar; //如果能在用户信息里面取到头像则用，否则用默认的\n\n      if (avatar.length > 0) {\n        return avatar;\n      }\n\n      return default_avatar;\n    },\n    title: function title() {\n      return \"\\u5173\\u4E8E\".concat(this.article.title, \"\\u7684\\u6587\\u7AE0\\u8BE6\\u60C5\");\n    }\n  },\n  methods: {\n    findArticleById: function findArticleById() {\n      var _this = this;\n\n      var id = this.$route.params.id; //发起http请求，后端的数据\n\n      _findArticleById(id).then(function (res) {\n        if (res.data.success) {\n          _this.article.editor.value = res.data.data.body.content;\n          Object.assign(_this.article, res.data.data); //将值参数2的值拷贝到参数1\n        } else {\n          _this.$message.error(res.data.msg);\n        }\n      }).catch(function (err) {\n        _this.$message({\n          type: 'error',\n          message: '文章加载失败',\n          showClose: true\n        });\n      }).finally(function () {});\n    },\n    findCommentList: function findCommentList() {\n      var _this2 = this;\n\n      var id = this.$route.params.id; //发起http请求，后端的数据\n\n      getCommentsByArticle(id).then(function (res) {\n        if (res.data.success) {\n          _this2.comments = res.data.data;\n        } else {\n          _this2.$message({\n            type: 'error',\n            message: '评论加载失败',\n            showClose: true\n          });\n        }\n      }).catch(function (err) {\n        _this2.$message.error(\"系统错误\");\n      }).finally(function () {});\n    },\n    //编辑文章\n    editArticle: function editArticle() {\n      this.$router.push({\n        path: \"/write/\".concat(this.article.id)\n      });\n    },\n    tagOrCategory: function tagOrCategory(type, id) {\n      this.$router.push({\n        path: \"/\".concat(type, \"/\").concat(id)\n      });\n    },\n    //发布评论\n    publishComment: function publishComment() {\n      var that = this;\n\n      if (!that.comment.content) {\n        return;\n      }\n\n      that.comment.article.id = that.article.id;\n      var parms = {\n        articleId: that.article.id,\n        content: that.comment.content\n      };\n\n      _publishComment(parms, this.$store.state.token).then(function (res) {\n        if (res.data.success) {\n          that.$message({\n            type: 'success',\n            message: '评论成功',\n            showClose: true\n          });\n          that.comment.content = '';\n          that.comments.unshift(res.data.data);\n          that.commentCountsIncrement();\n          that.findCommentList();\n        } else {\n          that.$message({\n            type: 'error',\n            message: '评论失败',\n            showClose: true\n          });\n        }\n      }).catch(function (error) {\n        if (error !== 'error') {\n          that.$message({\n            message: error,\n            type: 'error',\n            showClose: true\n          });\n        }\n      });\n    },\n    commentCountsIncrement: function commentCountsIncrement() {\n      this.article.commentCounts += 1;\n    }\n  },\n  //组件内的守卫 调整body的背景色\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    window.document.body.style.backgroundColor = '#fff';\n    next();\n  },\n  beforeRouteLeave: function beforeRouteLeave(to, from, next) {\n    window.document.body.style.backgroundColor = '#f5f5f5';\n    next();\n  }\n};",{"version":3,"sources":["BlogView.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"me-view-body\" v-title:data-title=\"title\">\r\n    <el-container class=\"me-view-container\">\r\n      <!--<el-aside class=\"me-area\">-->\r\n      <!--<ul class=\"me-operation-list\">-->\r\n      <!--<li class=\"me-operation-item\">-->\r\n      <!--<el-button type=\"primary\" icon=\"el-icon-edit\"></el-button>-->\r\n      <!--</li>-->\r\n      <!--</ul>-->\r\n      <!--</el-aside>-->\r\n      <el-main>\r\n        <div class=\"me-view-card\">\r\n          <h1 class=\"me-view-title\">{{article.title}}</h1>\r\n        <div class=\"me-view--author\">\r\n          <a class=\"\">\r\n            <img class=\"me-view-picture\" :src=\"avatar\"/>\r\n          </a>\r\n          <div class=\"me-view-info\">\r\n              <span>{{article.author.nickname}}</span>\r\n            <div class=\"me-view-meta\">\r\n              <span>{{article.createDate | format  }}</span>\r\n              <span> 阅读  {{article.viewCounts}}</span>\r\n              <span> 评论  {{article.commentCounts}}</span>\r\n            </div>\r\n          </div>\r\n          <!--    只有是自己发布的文章才能看到编辑按钮  -->\r\n          <el-button\r\n              v-if=\"this.article.author.id==this.$store.state.id\"\r\n              @click=\"editArticle()\"\r\n              style=\"position: absolute;left:70%;\"\r\n              size=\"mini\"\r\n              round\r\n              icon=\"el-icon-edit\">编辑</el-button>\r\n        </div>\r\n          <div class=\"me-view-content\">\r\n            <markdown-editor :editor=\"article.editor\"></markdown-editor>\r\n          </div>\r\n\r\n          <div class=\"me-view-end\">\r\n            <el-alert\r\n                title=\"文章End...\"\r\n                type=\"success\"\r\n                center\r\n                :closable=\"false\">\r\n            </el-alert>\r\n          </div>\r\n\r\n          <div class=\"me-view-tag\">\r\n            标签：\r\n            <!--<el-tag v-for=\"t in article.tags\" :key=\"t.id\" class=\"me-view-tag-item\" size=\"mini\" type=\"success\">{{t.tagName}}</el-tag>-->\r\n            <el-button @click=\"tagOrCategory('tag', t.id)\" size=\"mini\" type=\"primary\" v-for=\"t in article.tags\" :key=\"t.id\" round plain>{{t.tagName}}</el-button>\r\n          </div>\r\n\r\n          <div class=\"me-view-tag\">\r\n            文章分类：\r\n            <!--<span style=\"font-weight: 600\">{{article.category.categoryName}}</span>-->\r\n            <el-button @click=\"tagOrCategory('category', article.category.id)\" size=\"mini\" type=\"primary\" round plain>{{article.category.categoryName}}</el-button>\r\n          </div>\r\n\r\n          <div class=\"me-view-comment\">\r\n            <div class=\"me-view-comment-write\">\r\n              <el-row :gutter=\"20\">\r\n                <el-col :span=\"2\">\r\n                  <a class=\"\">\r\n                  <img class=\"me-view-picture\" :src=\"avatar\"/>\r\n                  </a>\r\n                </el-col>\r\n                <el-col :span=\"22\">\r\n                  <el-input\r\n                  type=\"textarea\"\r\n                  :authosize=\"{minRow:2}\"\r\n                  placeholder=\"你的评论...\"\r\n                  class=\"me-view-comment-text\"\r\n                  v-model=\"comment.content\"\r\n                  resize=\"none\">\r\n                  </el-input>\r\n                </el-col>\r\n              </el-row>\r\n\r\n              <el-row :gutter=\"20\">\r\n                <el-col :span=\"2\" :offset=\"22\">\r\n                  <el-button type=\"text\" @click=\"publishComment()\">评论</el-button>\r\n                </el-col>\r\n              </el-row>\r\n            </div>\r\n\r\n            <div class=\"me-view-comment-title\">\r\n              <span>{{article.commentCounts}}条评论</span>\r\n            </div>\r\n\r\n            <comment-item\r\n                v-for=\"(c,index) in comments\"\r\n                :comment=\"c\"\r\n                :articleId=\"article.id\"\r\n                :index=\"index\"\r\n                :rootCommentCounts=\"comments.length\"\r\n                @commentCountsIncrement=\"commentCountsIncrement\"\r\n                :key=\"c.id\">\r\n            </comment-item>\r\n          </div>\r\n        </div>\r\n      </el-main>\r\n    </el-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport {findArticleById} from '@/api/article'\r\nimport MarkdownEditor from \"@/components/markdown/MarkdownEditor\";\r\nimport CommentItem from \"@/components/comment/CommentItem\";\r\nimport {getCommentsByArticle,publishComment} from \"@/api/comment\";\r\nimport default_avatar from '@/assets/img/logo.png'\r\n\r\nexport default {\r\n  name: \"BlogView\",\r\n  components:{\r\n    \"markdown-editor\":MarkdownEditor,\r\n    \"comment-item\" :CommentItem\r\n  },\r\n  data() {\r\n    return {\r\n      article:{\r\n        id: '',\r\n        title: '',\r\n        commentCounts: 0,\r\n        viewCounts: 0,\r\n        summary: '',\r\n        author: {},\r\n        tags: [],\r\n        category:{},\r\n        createDate: '',\r\n        editor: {\r\n          value: '',\r\n          toolbarsFlag: false,\r\n          subfield: false,\r\n          defaultOpen: 'preview'\r\n        }\r\n      },\r\n      comments: [],\r\n      comment: {\r\n        article: {\r\n\r\n        },\r\n        content: ''\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.findArticleById();\r\n    this.findCommentList();\r\n  },\r\n  computed:{\r\n    avatar() {\r\n      let avatar = this.$store.state.avatar\r\n      //如果能在用户信息里面取到头像则用，否则用默认的\r\n      if (avatar.length > 0) {\r\n        return avatar\r\n      }\r\n      return default_avatar\r\n    },\r\n    title(){\r\n      return `关于${this.article.title}的文章详情`\r\n    }\r\n  },\r\n  methods:{\r\n    findArticleById(){\r\n      var id = this.$route.params.id;\r\n      //发起http请求，后端的数据\r\n      findArticleById(id).then((res)=>{\r\n        if(res.data.success){\r\n          this.article.editor.value=res.data.data.body.content;\r\n          Object.assign(this.article,res.data.data) //将值参数2的值拷贝到参数1\r\n\r\n        }else{\r\n          this.$message.error(res.data.msg);\r\n        }\r\n      }).catch((err)=>{\r\n        this.$message({type: 'error', message: '文章加载失败', showClose: true})\r\n      }).finally(()=>{\r\n      })\r\n    },\r\n    findCommentList(){\r\n      var id = this.$route.params.id;\r\n      //发起http请求，后端的数据\r\n      getCommentsByArticle(id).then((res)=>{\r\n        if(res.data.success){\r\n          this.comments=res.data.data;\r\n        }else{\r\n          this.$message({type: 'error', message: '评论加载失败', showClose: true})\r\n        }\r\n      }).catch((err)=>{\r\n        this.$message.error(\"系统错误\");\r\n      }).finally(()=>{\r\n      })\r\n    },\r\n    //编辑文章\r\n    editArticle(){\r\n      this.$router.push({path: `/write/${this.article.id}`})\r\n    },\r\n    tagOrCategory(type,id){\r\n        this.$router.push({path:`/${type}/${id}`})\r\n    },\r\n    //发布评论\r\n    publishComment(){\r\n      let that = this\r\n      if (!that.comment.content) {\r\n        return;\r\n      }\r\n      that.comment.article.id = that.article.id\r\n      let parms = {articleId:that.article.id,content:that.comment.content}\r\n      publishComment(parms,this.$store.state.token).then(res => {\r\n        if(res.data.success){\r\n          that.$message({type: 'success', message: '评论成功', showClose: true});\r\n          that.comment.content='';\r\n          that.comments.unshift(res.data.data);\r\n          that.commentCountsIncrement();\r\n          that.findCommentList();\r\n        }else{\r\n          that.$message({type: 'error', message: '评论失败', showClose: true})\r\n        }\r\n      }).catch(error => {\r\n        if (error !== 'error') {\r\n          that.$message({message:error,type:'error',showClose:true});\r\n        }\r\n      })\r\n    },\r\n    commentCountsIncrement(){\r\n      this.article.commentCounts+=1;\r\n    },\r\n  },\r\n  //组件内的守卫 调整body的背景色\r\n  beforeRouteEnter(to, from, next) {\r\n    window.document.body.style.backgroundColor = '#fff';\r\n    next();\r\n  },\r\n  beforeRouteLeave(to, from, next) {\r\n    window.document.body.style.backgroundColor = '#f5f5f5';\r\n    next();\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.me-view-body {\r\n  margin: 100px auto 140px;\r\n}\r\n\r\n.me-view-container {\r\n  width: 800px;\r\n}\r\n\r\n.el-main {\r\n  overflow: hidden;\r\n}\r\n\r\n.me-view-title {\r\n  font-size: 34px;\r\n  font-weight: 800;\r\n  line-height: 1.3;\r\n}\r\n\r\n.me-view-author {\r\n  /*margin: 30px 0;*/\r\n  margin-top: 30px;\r\n  vertical-align: middle;\r\n}\r\n\r\n.me-view-picture {\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 50%;\r\n  vertical-align: middle;\r\n  background-color: #5fb878;\r\n}\r\n\r\n.me-view-info {\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  margin-left: 8px;\r\n}\r\n\r\n.me-view-meta {\r\n  font-size: 12px;\r\n  color: #969696;\r\n}\r\n\r\n.me-view-end {\r\n  margin-top: 20px;\r\n}\r\n\r\n.me-view-tag {\r\n  margin-top: 20px;\r\n  padding-left: 6px;\r\n  border-left: 4px solid #c5cac3;\r\n}\r\n\r\n.me-view-tag-item {\r\n  margin: 0 4px;\r\n}\r\n\r\n.me-view-comment {\r\n  margin-top: 60px;\r\n}\r\n\r\n.me-view-comment-title {\r\n  font-weight: 600;\r\n  border-bottom: 1px solid #f0f0f0;\r\n  padding-bottom: 20px;\r\n}\r\n\r\n.me-view-comment-write {\r\n  margin-top: 20px;\r\n}\r\n\r\n.me-view-comment-text {\r\n  font-size: 16px;\r\n}\r\n\r\n.v-show-content {\r\n  padding: 8px 25px 15px 30px !important;\r\n}\r\n\r\n.v-note-wrapper .v-note-panel {\r\n  box-shadow: none !important;\r\n}\r\n\r\n.v-note-wrapper .v-note-panel .v-note-show .v-show-content, .v-note-wrapper .v-note-panel .v-note-show .v-show-content-html {\r\n  background: #fff !important;\r\n}\r\n\r\n\r\n</style>\r\n"],"sourceRoot":"src/views/blog"}]}